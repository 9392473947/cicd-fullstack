name: cicd-ec2

on:
  push:
    branches:
      - main

jobs:
  build_image_deploy:
    runs-on: ubuntu-latest  
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Log in to AWS 
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.Access_key_id }}  
          aws-secret-access-key: ${{ secrets.Access_key }}  
          aws-region: us-east-1
      - name: Login to AWS ECR
        run: | aws ecr command;
      - name: Build Docker image
        run: |
          docker build -t backend ./backend/
          docker build -t frontend ./frontend/
      - name: Push image to DockerHub
        run: |
          docker tag backend:latest image uri:latest
          docker tag frontend:latest image uri:latest
          docker push backend-image-uri:latest
          docker push frontend-image-uri:latest
      - name: Deploy to EC2 instance
        env:
          SSH_KEY: ${{ secrets.EC2_SSH_KEY }}  
          SSH_USER: ${{ secrets.SSH_USER }}    
          SSH_IP: ${{ secrets.SSH_IP }}
        run: |
          echo "$SSH_KEY" > kartik-key.pem
          sudo chmod 600 kartik-key.pem
          ssh -o StrictHostKeyChecking=no -i kartik-key.pem $SSH_USER@$SSH_IP << 'EOF'
            sudo apt update
            sudo apt upgrade -y
            sudo apt install docker.io -y || true
            sudo systemctl enable docker || true
            sudo systemctl start docker || true
            sudo docker stop kartik || true
            sudo docker rm kartik || true
            sudo docker run 
            sudo docker pull kartikeya1112/latest-image:latest
            sudo docker pull Imgae_uri:latest
            sudo docker run --name=backend -p 2000:5000 -d kartikeya1112/latest-image:latest
            sudo docker run --name=frontend 
          EOF
